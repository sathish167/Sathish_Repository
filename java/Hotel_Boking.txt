package hotel_management;
import java.util.Scanner;

public class hotel {
	static String[] roomNumbers = {"101", "102", "103", "104", "105"};
    static boolean[] availability = {true, true, false, true, false}; 
    static String[] guestNames = {null, null, "Shiva", null, "sathish"}; 

    public static void displayAvailableRooms() {
        System.out.println("Available Rooms:");
        boolean foundAvailable = false;
        for (int i = 0; i < roomNumbers.length; i++) {
            if (availability[i]) {
                System.out.println("Room Number: " + roomNumbers[i]);
                foundAvailable = true;
            }
        }
        if (!foundAvailable) {
            System.out.println("No rooms available.");
        }
    }


    public static void bookRoom(int roomIndex, String guestName) {
        if (roomIndex >= 0 && roomIndex < availability.length) {
            if (availability[roomIndex]) {
                availability[roomIndex] = false; // Mark room as booked
                guestNames[roomIndex] = guestName;
                System.out.println("Room " + roomNumbers[roomIndex] + " successfully booked for " + guestName + ".");
            } else {
                System.out.println("Room " + roomNumbers[roomIndex] + " is not available.");
            }
        } else {
            System.out.println("Invalid room selection.");
        }
    }

 
    public static void checkOut(int roomIndex) {
        if (roomIndex >= 0 && roomIndex < availability.length) {
            if (!availability[roomIndex]) {
                System.out.println("Checking out from Room " + roomNumbers[roomIndex] + " (Guest: " + guestNames[roomIndex] + ").");
                availability[roomIndex] = true; 
                guestNames[roomIndex] = null;
            } else {
                System.out.println("Room " + roomNumbers[roomIndex] + " is already available.");
            }
        } else {
            System.out.println("Invalid room selection.");
        }
    }


    public static void generateOccupancyReport() {
        System.out.println("Room Occupancy Report:");
        for (int i = 0; i < roomNumbers.length; i++) {
            String status = availability[i] ? "Available" : "Occupied by " + guestNames[i];
            System.out.println("Room Number: " + roomNumbers[i] + " - " + status);
        }
    }


	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		 Scanner scanner = new Scanner(System.in);
	        int choice;

	        do {
	            System.out.println("\nHotel Management System");
	            System.out.println("1. View Available Rooms");
	            System.out.println("2. Book a Room");
	            System.out.println("3. Check Out a Room");
	            System.out.println("4. Generate Occupancy Report");
	            System.out.println("5. Exit");
	            System.out.print("Enter your choice: ");
	            choice = scanner.nextInt();
	            scanner.nextLine(); 
	            switch (choice) {
	                case 1:
	                    displayAvailableRooms();
	                    break;
	                case 2:
	                    System.out.print("Enter room number to book (e.g., 101): ");
	                    String roomToBook = scanner.nextLine();
	                    int roomIndexToBook = getRoomIndex(roomToBook);
	                    if (roomIndexToBook != -1) {
	                        System.out.print("Enter guest name: ");
	                        String guestName = scanner.nextLine();
	                        bookRoom(roomIndexToBook, guestName);
	                    } else {
	                        System.out.println("Invalid room number.");
	                    }
	                    break;
	                case 3:
	                    System.out.print("Enter room number to check out (e.g., 101): ");
	                    String roomToCheckOut = scanner.nextLine();
	                    int roomIndexToCheckOut = getRoomIndex(roomToCheckOut);
	                    if (roomIndexToCheckOut != -1) {
	                        checkOut(roomIndexToCheckOut);
	                    } else {
	                        System.out.println("Invalid room number.");
	                    }
	                    break;
	                case 4:
	                    generateOccupancyReport();
	                    break;
	                case 5:
	                    System.out.println("Exiting the system.");
	                    break;
	                default:
	                    System.out.println("Invalid choice. Please try again.");
	            }
	        } while (choice != 5);
	        
	        scanner.close();
	    }

	    
	    private static int getRoomIndex(String roomNumber) {
	        for (int i = 0; i < roomNumbers.length; i++) {
	            if (roomNumbers[i].equals(roomNumber)) {
	                return i;
	            }
	        }
	        return -1;
	}

}




out put:


Hotel Management System
1. View Available Rooms
2. Book a Room
3. Check Out a Room
4. Generate Occupancy Report
5. Exit
Enter your choice: 1
Available Rooms:
Room Number: 101
Room Number: 102
Room Number: 104

Hotel Management System
1. View Available Rooms
2. Book a Room
3. Check Out a Room
4. Generate Occupancy Report
5. Exit
Enter your choice: 2
Enter room number to book (e.g., 101): 102
Enter guest name: sathish
Room 102 successfully booked for sathish.

Hotel Management System
1. View Available Rooms
2. Book a Room
3. Check Out a Room
4. Generate Occupancy Report
5. Exit
Enter your choice: 3
Enter room number to check out (e.g., 101): 104
Room 104 is already available.

Hotel Management System
1. View Available Rooms
2. Book a Room
3. Check Out a Room
4. Generate Occupancy Report
5. Exit
Enter your choice: 4
Room Occupancy Report:
Room Number: 101 - Available
Room Number: 102 - Occupied by sathish
Room Number: 103 - Occupied by Shiva
Room Number: 104 - Available
Room Number: 105 - Occupied by sathish

Hotel Management System
1. View Available Rooms
2. Book a Room
3. Check Out a Room
4. Generate Occupancy Report
5. Exit
Enter your choice: 5
Exiting the system.

